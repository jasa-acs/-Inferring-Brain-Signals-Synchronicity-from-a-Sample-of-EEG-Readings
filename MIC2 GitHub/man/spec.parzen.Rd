% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/MIC_helper.R
\name{spec.parzen}
\alias{spec.parzen}
\title{Estimate Spectral Density using Parzen Lag Window}
\usage{
spec.parzen(x, a = length(x) - 1, nn = 512)
}
\arguments{
\item{x}{vector, a univariate time series.}

\item{a}{integer, max lag to truncate the sample ACF estimates, default \code{length(x)-1} (no truncation).
It has to be smaller than the length fo time seires \code{x}.}

\item{nn}{integer, resolution of the spectral estimates (number of points on frequency domain), default at 512}
}
\value{
List of the following items:
  \item{\code{freq}}{frequencies where PSD is evaluated at}
  \item{\code{spec}}{estimated correlogram with truncation \code{a} and Parzen window smoothed ACF}
}
\description{
\code{spec.parzen} calculate the spectral estimate based on a Fourier transform of a
  truncated and Parzen window smoothed auto-covariance function (ACF).
}
\details{
The raw periodogram \code{spec.pgram} is not a consistent estimator of the spectral density,
  therefore a class of lag window estimators are considered as surrogates in practice achieving
  smootheness and consistency.

Parzen window estimator works the best when the true spectrum is continuous, and specifically
  have peak concentrations at certain frequencies. Such estimators operates on times series
  that are presumably zero-mean and stationary, so that demean and detrending are highly
  recommended on \code{x} before implementation.
}
\examples{
\dontrun{
x <- rnorm(100)
spec <- spec.parzen(x, a = 50, nn = 50)

plot(spec.pgram(x, plot = "F")$spec, ylab = 'spec')
lines(spec$spec)
}
}
